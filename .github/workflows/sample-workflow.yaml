name: First test
run-name: API Change testing
on: [push]
jobs:
  Get-new-json:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.8
      - name: what does it look like?
        run: ls
      - name: get openapi json
        run: |
          pip install fastapi
          cd src
          python -m json_get
      - name: Change filename
        run: mv openapi.json new-json.json
      - name: upload openapi json as artifact
        uses: actions/upload-artifact@v3
        with:
          name: new-json
          path: new-json.json


  Get-old-json:
    runs-on: ubuntu-latest
    steps:
      - name: checkout existing repo
        uses: actions/checkout@v3
        with:
          ref: main
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.8
      - name: get openapi json
        run: |
          pip install fastapi
          python -m json_get
      - name: Change file name
        run: mv openapi.json old-json.json
      - name: Upload openapi json as artifact
        uses: actions/upload-artifact@v3
        with:
          name: old-json
          path: old-json.json


  Generate-changelogs:
    runs-on: ubuntu-latest
    needs: [Get-new-json, Get-old-json]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Pull docker container
        run: docker pull ahibert/api-testing:latest
      - name: Run docker container
        run: |
          docker run --name test-container --mount type=bind,source=$(pwd)/old-json,target=/app/old-json --mount type=bind,source=$(pwd)/new-json,target=/app/new-json ahibert/api-testing:latest all_changes
          docker cp test-container:app/logger.txt .
      - name: Upload logs as artifact
        uses: actions/upload-artifact@v3
        with:
          name: changelogs
          path: logger.txt

  Check-changes:
    runs-on: ubuntu-latest
    needs: [Generate-changelogs]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Download log artifact
        uses: actions/download-artifact@v3
        with:
          name: changelogs
      - name: Compare texts
        run: |
          if diff -u --ignore-space-change --strip-trailing-cr --ignore-blank-lines logger.txt src/test/api_testing/accepted_changes.txt; then
            printf "No unauthorized changes"
          else
            exit 1
          fi